# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: feature_server.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='feature_server.proto',
  package='feature_server',
  syntax='proto3',
  serialized_options=b'\n\026io.grpc.feature_serverB\022FeatureServerProtoP\001\242\002\002FS',
  create_key=_descriptor._internal_create_key,
  serialized_pb=b'\n\x14\x66\x65\x61ture_server.proto\x12\x0e\x66\x65\x61ture_server\"F\n\x0e\x43ollectRequest\x12\x10\n\x08node_idx\x18\x01 \x01(\x0c\x12\x12\n\nnode_count\x18\x02 \x01(\x03\x12\x0e\n\x06req_id\x18\x03 \x01(\t\"C\n\x0c\x43ollectReply\x12\x0f\n\x07\x66\x65\x61ture\x18\x01 \x01(\x0c\x12\x12\n\nnode_count\x18\x02 \x01(\x03\x12\x0e\n\x06req_id\x18\x03 \x01(\t2Z\n\rFeatureServer\x12I\n\x07\x43ollect\x12\x1e.feature_server.CollectRequest\x1a\x1c.feature_server.CollectReply\"\x00\x42\x33\n\x16io.grpc.feature_serverB\x12\x46\x65\x61tureServerProtoP\x01\xa2\x02\x02\x46Sb\x06proto3'
)




_COLLECTREQUEST = _descriptor.Descriptor(
  name='CollectRequest',
  full_name='feature_server.CollectRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='node_idx', full_name='feature_server.CollectRequest.node_idx', index=0,
      number=1, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=b"",
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='node_count', full_name='feature_server.CollectRequest.node_count', index=1,
      number=2, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='req_id', full_name='feature_server.CollectRequest.req_id', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=40,
  serialized_end=110,
)


_COLLECTREPLY = _descriptor.Descriptor(
  name='CollectReply',
  full_name='feature_server.CollectReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='feature', full_name='feature_server.CollectReply.feature', index=0,
      number=1, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=b"",
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='node_count', full_name='feature_server.CollectReply.node_count', index=1,
      number=2, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='req_id', full_name='feature_server.CollectReply.req_id', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=112,
  serialized_end=179,
)

DESCRIPTOR.message_types_by_name['CollectRequest'] = _COLLECTREQUEST
DESCRIPTOR.message_types_by_name['CollectReply'] = _COLLECTREPLY
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

CollectRequest = _reflection.GeneratedProtocolMessageType('CollectRequest', (_message.Message,), {
  'DESCRIPTOR' : _COLLECTREQUEST,
  '__module__' : 'feature_server_pb2'
  # @@protoc_insertion_point(class_scope:feature_server.CollectRequest)
  })
_sym_db.RegisterMessage(CollectRequest)

CollectReply = _reflection.GeneratedProtocolMessageType('CollectReply', (_message.Message,), {
  'DESCRIPTOR' : _COLLECTREPLY,
  '__module__' : 'feature_server_pb2'
  # @@protoc_insertion_point(class_scope:feature_server.CollectReply)
  })
_sym_db.RegisterMessage(CollectReply)


DESCRIPTOR._options = None

_FEATURESERVER = _descriptor.ServiceDescriptor(
  name='FeatureServer',
  full_name='feature_server.FeatureServer',
  file=DESCRIPTOR,
  index=0,
  serialized_options=None,
  create_key=_descriptor._internal_create_key,
  serialized_start=181,
  serialized_end=271,
  methods=[
  _descriptor.MethodDescriptor(
    name='Collect',
    full_name='feature_server.FeatureServer.Collect',
    index=0,
    containing_service=None,
    input_type=_COLLECTREQUEST,
    output_type=_COLLECTREPLY,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
])
_sym_db.RegisterServiceDescriptor(_FEATURESERVER)

DESCRIPTOR.services_by_name['FeatureServer'] = _FEATURESERVER

# @@protoc_insertion_point(module_scope)
